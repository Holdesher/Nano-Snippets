{

	//| javascript

    "ðŸŸ©JS: Console Log â€” Debugger": {
        "prefix": "dlog",
        "body": [
            "debugger; // TODO: debugger", 
            "console.log('ðŸŸ§ ${1:debugger}')", 
            "$0"
        ],
        "description": "ðŸŸ©JS: Console Log â€” Debugger",
    },

    "ðŸŸ©JS: Console Log â€” Error": {
        "prefix": "elog",
        "body": [
            "console.error('ðŸŸ¥ ${1:element}: ', ${1:element})", 
            "$0"
        ],
        "description": "ðŸŸ©JS: Console Log â€” Error",
    },

    "ðŸŸ©JS: Console Log â€” Important": {
        "prefix": "ilog",
        "body": [
            "console.log('ðŸŸª ${1:element}: ', ${1:element})", 
            "$0"
        ],
        "description": "ðŸŸ©JS: Console Log â€” Important",
    },

    "ðŸŸ©JS: Console Log â€” Base": {
        "prefix": "log",
        "body": [
            "console.log('ðŸŸ© ${1:element}: ', ${1:element})", 
            "$0"
        ],
        "description": "ðŸŸ©JS: Console Log â€” Base",
    },

    "ðŸŸ©JS: Console Log â€” Message": {
        "prefix": "mlog",
        "body": [
            "console.log('ðŸŸ¦ ${1:message}')", 
            "$0"
        ],
        "description": "ðŸŸ©JS: Console Log â€” Message",
    },

	"ðŸŸ©JS: Try Catch â€” Base": {
		"prefix": "try",
		"body": [
			"try {",
			"\t${1:code}",
			"} catch (err) {",
			"\tconsole.error('ðŸŸ¥ Error: ', err)",
            "\tthrow new Error('ðŸŸ¥ Error: ', err);",
			"}",
			"$0"
		],
		"description": "ðŸŸ©JS: Try Catch â€” Base",
	},

    "ðŸŸ©JS: Console Log â€” Warning": {
        "prefix": "wlog",
        "body": [
            "console.warning('ðŸŸ¨ ${1:element}: ', ${1:element})", 
            "$0"
        ],
        "description": "ðŸŸ©JS: Console Log â€” Warning",
    },

	//| python

    "ðŸŸ©PY: Print â€” Message": {
        "prefix": "mpy",
        "body": [
            "print('ðŸŸ¦ ${1:message}')",
            "$0"
        ],
        "description": "ðŸŸ©PY: Print â€” Message",
    },

{
	"ðŸŸ©PY: Try Catch â€” Base": {
		"prefix": "try",
		"body": [
			"try:",
			"\t${1:code}",
			"except Exception as e:",
			"\tprint('ðŸŸ¥ Error: ', err)",
            "\traise Exception('ðŸŸ¥ Error: ', err)",
			"}",
			"$0"
		],
		"description": "ðŸŸ©PY: Try Catch â€” Base",
	},

    "ðŸŸ©PY: Print â€” Base": {
        "prefix": "py",
        "body": [
            "print('ðŸŸ© ${1:element}: ', ${1:element})",
            "$0"
        ],
        "description": "ðŸŸ©PY: Print â€” Base",
    },

	//| react

    "ðŸŸ©REACT: Console Log â€” useEffect": {
        "prefix": "ulog",
        "body": [
            "useEffect(() => {",
            "\tconsole.log('ðŸŸ© ${1:element}    ', ${1:element})",
            "}, [${1:element}])",
            "$0"
        ],
        "description": "ðŸŸ©REACT: Console Log â€” useEffect",
    },

}

// Nano-Snippets â€” kah3vich
